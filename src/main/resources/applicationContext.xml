<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
    https://www.springframework.org/schema/context/spring-context.xsd">



<!--    <context:property-placeholder location="classpath:application.properties" />
    <context:component-scan base-package="com.mycompany.invoice.repository.memory"/>
    <context:component-scan base-package="com.mycompany.invoice.service.prefix"/>
    <context:component-scan base-package="com.mycompany.invoice.controller.web"/>-->
    <!--
    Quand tu utilises autowire byName
    Spring passe par tes classes, regarde tes attributs et regarde si j'ai pas une référence à un objet du même nom
    Dans InvoiceServicePrefix, spring va détecter l'attribut repository, et voir que j'ai un id repository qui fait
    référence à l'instance de l'objet
    InvoiceRepositoryMemory, il va injecter la dépendance dans l'attribut repository directement
-->

<!--    <bean class="com.mycompany.invoice.service.prefix.InvoiceServicePrefix" >
        &lt;!&ndash;<property name="file" value="C:\\Exo_txt_spring\\movies.txt" />&ndash;&gt;
        &lt;!&ndash;<property name="repository" ref="repository"/>&ndash;&gt;
    </bean>

    <bean  class="com.mycompany.invoice.repository.memory.InvoiceRepository"/>

    <bean class="com.mycompany.invoice.controller.web.InvoiceControllerWeb">

    </bean>-->

</beans>